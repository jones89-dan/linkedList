#BlueJ class context
comment0.target=List
comment1.params=
comment1.target=List()
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Use\ stringBuilder\ method\ to\ format\ linked\ list\ output\ with\ commas.\n\ \n\ @return\ s.toString\ -\ stringBuilder\ output\n
comment11.params=
comment11.target=int\ findLast()
comment11.text=\n\ Finds\ the\ last\ item\ in\ the\ List.\n\ \n\ @return\ r.info\ -\ the\ int\ value\ of\ the\ last\ item.\n
comment12.params=x
comment12.target=void\ insertLast(int)
comment12.text=\n\ Inserts\ new\ Item\ at\ the\ end\ of\ the\ list.\ \n\ \n\ @param\ x\ -\ int\ to\ inserted\ at\ the\ end\ of\ the\ linked\ list.\n
comment13.params=
comment13.target=void\ removeLast()
comment13.text=\n\ Removes\ Item\ from\ the\ end\ of\ the\ list.\ \n\ \n
comment14.params=
comment14.target=List\ copy()
comment14.text=\n\ Create\ a\ copy\ of\ the\ list\ by\ looping\ through\ list\ and\ append\ to\ new\ list.\ \n\ \n\ @return\ copyList\ -\ coppied\ list.\n
comment15.params=x
comment15.target=List\ join(List)
comment15.text=\n\ Join\ two\ lists\ together.\ \n\ \n\ @param\ x\ -\ list\ to\ add.\n\ @return\ x\ -\ joined\ lists.\n
comment16.params=x
comment16.target=List\ intersect(List)
comment16.text=\n\ Intersects\ one\ list\ with\ another.\ \n\ \n\ @param\ x\ -\ list\ to\ intersect\ with.\n\ @return\ x\ -\ the\ interesction\ results.\n
comment17.params=x
comment17.target=void\ append(int)
comment17.text=\n\ appends\ new\ items\ to\ a\ linked\ list.\ \n\ \n\ @param\ x\ -\ int\ to\ append\ to\ list.\n
comment2.params=i
comment2.target=void\ insertFirst(int)
comment3.params=
comment3.target=int\ removeFirst()
comment4.params=
comment4.target=java.lang.Boolean\ isEmpty()
comment5.params=
comment5.target=int\ count()
comment6.params=p\ i
comment6.target=void\ insertAfter(Item,\ int)
comment7.params=p
comment7.target=int\ deleteAfter(Item)
comment8.params=i
comment8.target=Item\ find(int)
comment9.params=arr
comment9.target=List(int[])
comment9.text=\n\ Overloaded\ List\ constructor\ converts\ array\ to\ linked\ list.\ \n\ \n\ @param\ arr\ -\ array\ to\ be\ converted\ into\ a\ linked\ list.\n
numComments=18
